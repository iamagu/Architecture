软件架构的定义
  软件架构可以被简单描述为：一系列组件之间的组合、交互、继承的关系。
  参考ANSI/IEEE定义可以理解为：软件密集型系统中对系统的实现和部署起到决定性作用的系统。
  
关键点：软件架构应该符合项目干系人的目标，功能上细分为功能性和非功能性需求。
特殊性：架构设计必须在开发初期确定。（架构设计作为关键决策必须前期确定）
表述工具：1 UML(国际标准) 2 Relation Rose
验证：目前没有比较好的方法可以自动验证软件架构是否可以达到项目干系人的目标，只有通过多种方式多个级别的测试。
  例如：
  1 单元测试，验证单一功能
  2 集成测试，评估系统的兼容性
  3 验收测试，验证程序是否提供必要的功能、用户的满意度

架构体现在难以改变或者改变起来代价较大的决定上。
系统分析分析系统做，架构师设计如何去实现。
架构师是需求与实现的纽带，架构师应该参与开发的全过程。包括分析需求、架构设计、实现、测试、继承与部署。
